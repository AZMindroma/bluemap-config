##                          ##
##         BlueMap          ##
##        Map-Config        ##
##                          ##

# The name of this map
# This defines the display name of this map, you can change this at any time.
# Default is the id of this map
name: "Overworld"

# The path to the save-folder of the world to render.
#  (If this is not defined (commented out or removed), the map will be only registered to the web-server and the web-app
#   but not rendered or loaded by BlueMap. This can be used to display a map that has been rendered somewhere else.)
world: "world"

# A lower value makes the map sorted first (in lists and menus), a higher value makes it sorted later.
# The value needs to be an integer but it can be negative.
# You can change this at any time.
# Default is 0
sorting: 0

# The position on the world where the map will be centered if you open it.
# You can change this at any time.
# This defaults to the world-spawn if you don't set it.
#start-pos: {x:500, z:-820}

# The color of thy sky as a hex-color
# You can change this at any time.
# Default is "#7dabff"
sky-color: "#7dabff"

# Defines the ambient light-strength that every block is receiving, regardless of the sunlight/blocklight.
# 0 is no ambient light, 1 is fully lighted.
# You can change this at any time.
# Default is 0
ambient-light: 0.1

# Defines the skylight level that the sky of the world is emitting.
# This should always be equivalent to the maximum in-game sky-light for that world!
# If this is a normal overworld dimension, set this to 15 (max).
# If this is a normal nether or end dimension, set this to 0 (min).
# Changing this value requires a re-render of the map.
# Default is 15
world-sky-light: 15

# BlueMap tries to omit all blocks that are below this Y-level and are not visible from above-ground.
# More specific: Block-Faces that have a sunlight/skylight value of 0 are removed.
# This improves the performance of the map on slower devices by a lot, but might cause some blocks to disappear that should normally be visible.
# Changing this value requires a re-render of the map.
# Set to a very high value to remove caves everywhere (e.g. 10000)
# Set to a very low value to remove nothing and render all caves (e.g. -10000)
# Default is 55 (slightly below water-level)
remove-caves-below-y: 55

# With this value set to true, BlueMap uses the block-light value instead of the sky-light value to "detect caves".
# (See: remove-caves-below-y)
# Changing this value requires a re-render of the map.
# Default is false
cave-detection-uses-block-light: false

# With the below values you can limit the map-render.
# This can be used to ignore the nethers ceiling or render only a certain part of a world.
# Changing this values might require a re-render of the map, already rendered tiles outside the limits will not be deleted.
# Default is no min or max value (= infinite bounds)
#min-x: -4000
#max-x: 4000
#min-z: -4000
#max-z: 4000
#min-y: 50
#max-y: 100

# The minimum "inhabitedTime" value that a chunk must have to be rendered.
# If you set this to a value greater than 0, bluemap will only render chunks that players have visited already.
# Default is 0
min-inhabited-time: 0

# Using this, BlueMap pretends that every Block out of the defined render-bounds is AIR,
# this means you can see the blocks where the world is cut (instead of having a see-through/xray view).
# This has only an effect if you set some render-bounds above.
# Changing this value requires a re-render of the map.
# Default is true
render-edges: true

# Whether the hires-layer will be saved to the storage.
# Disabling this will speed up rendering and reduce the size of the map-files a lot.
# But you will not be able to see the full 3d-models if you zoom in on the map.
# Changing this to false will not remove any existing tiles, existing tiles just won't get updated anymore.
# Changing this to true will require a re-render of the map.
# Default is true
save-hires-layer: true

# This defines the storage-config that will be used to save this map.
# You can find your storage configs next to this config file in the 'storages'-folder.
# Changing this value requires a re-render of the map. The map in the old storage will not be deleted.
# Default is "file"
storage: "file"

# Normally BlueMap detects if a chunk has not yet generated it's light-data and omits rendering those chunks.
# If this is set to true BlueMap will render Chunks even if there is no light-data!
# This can be useful for example if some mod prevents light-data from being saved correctly.
# However, this also has a few drawbacks:
# - For those chunks, every block will always be fully lit
# - Night-mode might not work correctly
# - Caves will always be rendered (ignoring the 'renderCaves' setting)
# Default is false
ignore-missing-light-data: false


# Here you can define any static marker-sets with markers that should be displayed on the map.
# You can change this at any time.
# If you need dynamic markers, you can use any plugin that integrates with BlueMap's API.
# Here is a list: https://bluemap.bluecolored.de/wiki/customization/3rdPartySupport.html
marker-sets: {

    # Here is a marker-set with one of each type of marker as an example.
    # Uncomment (remove the leading #'s) and adapt them to your purpose.
    # See the wiki for more information: https://bluemap.bluecolored.de/wiki/customization/Markers.html
    settlements: {
        label: "Settlements"
        toggleable: true
        default-hidden: false
        markers: {
            mi: {
                type: "html"
                position: { x: 150, y: 70, z: 189 }
                label: "Main Island"
                html: "<div style='line-height: 2em; font-size: 2em; color: white; transform: translate(-50%, -50%);'>Main Island</div>"
                anchor: { x: 0, y: 0 }
                min-distance: 100
                max-distance: 900
            }
            mj: {
                type: "html"
                position: { x: -3145, y: 71, z: -2739 }
                label: "MikeJollie's base"
                html: "<div style='line-height: 2em; font-size: 2em; color: white; transform: translate(-50%, -50%);'>MikeJollie's base</div>"
                anchor: { x: 0, y: 0 }
                min-distance: 100
                max-distance: 900
            }
            hotelcity: {
                type: "html"
                position: { x: -780, y: 75, z: -400 }
                label: "Hotel City"
                html: "<div style='line-height: 2em; font-size: 2em; color: white; transform: translate(-50%, -50%);'>Hotel City</div>"
                anchor: { x: 0, y: 0 }
                min-distance: 100
                max-distance: 700
            }
            astralvalley: {
                type: "html"
                position: { x: -1013, y: 78, z: -477 }
                label: "Astral Valley"
                html: "<div style='line-height: 2em; font-size: 2em; color: white; transform: translate(-50%, -50%);'>Astral Valley</div>"
                anchor: { x: 0, y: 0 }
                min-distance: 100
                max-distance: 700
            }
            bl: {
                type: "html"
                position: { x: -100, y: 63, z: 644 }
                label: "Builder's Land"
                html: "<div style='line-height: 2em; font-size: 2em; color: white; transform: translate(-50%, -50%);'>Builder's Land</div>"
                anchor: { x: 0, y: 0 }
                min-distance: 100
                max-distance: 700
            }

            romania: {
                type: "html"
                position: { x: -470, y: 77, z: 681 }
                label: "Romania 2"
                html: "<div style='line-height: 2em; font-size: 2em; color: white; transform: translate(-50%, -50%);'>Romania 2</div>"
                anchor: { x: 0, y: 0 }
                min-distance: 50
                max-distance: 400
            }
	        enderland: {
		        type: "html"
		        position: { x: 75, y: 68, z: 812 }
		        label: "Enderland"
		        html: "<div style='line-height: 2em; font-size: 2em; color: white; transform: translate(-50%, -50%);'>Enderland</div>"
		        anchor: { x: 0, y: 0 }
		        min-distance: 100
		        max-distance: 700
	        }
            azbay: {
		        type: "html"
		        position: { x: -1000, y: 64, z: 171 }
		        label: "AZ Bay"
		        html: "<div style='line-height: 2em; font-size: 2em; color: white; transform: translate(-50%, -50%);'>AZ Bay</div>"
		        anchor: { x: 0, y: 0 }
		        min-distance: 100
		        max-distance: 700
	        }
            phokzone: {
                type: "html"
                position: { x: -995, y: 104, z: 385 }
                label: "Phok Zone"
                html: "<div style='line-height: 2em; font-size: 2em; color: white; transform: translate(-50%, -50%);'>Phok Zone</div>"
                anchor: { x: 0, y: 0 }
                min-distance: 50
                max-distance: 400
            }
        }
    }
    
    houses: {
        label: "Houses"
        toggleable: true
        default-hidden: false
        markers: {
            hotel: {
                type: "poi"
                position: { x: -818, y: 84, z: -413 }
                label: "Osaka & AZ Hotel"
                icon: "assets/poi.svg"
                anchor: { x: 25, y: 45 }
                min-distance: 10
                max-distance: 450
            }
            nikita: {
                type: "poi"
                position: { x: 109, y: 72, z: 182 }
                label: "Nikita's house"
                icon: "assets/poi.svg"
                anchor: { x: 25, y: 45 }
                min-distance: 10
                max-distance: 450
            }
            azmi: {
                type: "poi"
                position: { x: 71, y: 77, z: 201 }
                label: "AZ's former MI house"
                icon: "assets/poi.svg"
                anchor: { x: 25, y: 45 }
                min-distance: 10
                max-distance: 200
            }
            brox: {
                type: "poi"
                position: { x: 83, y: 77, z: 223 }
                label: "BroXgamer's house"
                icon: "assets/poi.svg"
                anchor: { x: 25, y: 45 }
                min-distance: 10
                max-distance: 450
            }
            terriami: {
                type: "poi"
                position: { x: 180, y: 85, z: 228 }
                label: "Terria's old house"
                icon: "assets/poi.svg"
                anchor: { x: 25, y: 45 }
                min-distance: 10
                max-distance: 200
            }
            khoa: {
                type: "poi"
                position: { x: 108, y: 67, z: 246 }
                label: "Khoa's place"
                icon: "assets/poi.svg"
                anchor: { x: 25, y: 45 }
                min-distance: 10
                max-distance: 450
            }
            mg: {
                type: "poi"
                position: { x: 114, y: 82, z: 212 }
                label: "Mg's house"
                icon: "assets/poi.svg"
                anchor: { x: 25, y: 45 }
                min-distance: 10
                max-distance: 450
            }
            alold: {
                type: "poi"
                position: { x: -32, y: 74, z: 278 }
                label: "AL's former house"
                icon: "assets/poi.svg"
                anchor: { x: 25, y: 45 }
                min-distance: 10
                max-distance: 200
            }
            justin: {
                type: "poi"
                position: { x: 78, y: 68, z: 798 }
                label: "Justin's home"
                icon: "assets/poi.svg"
                anchor: { x: 25, y: 45 }
                min-distance: 10
                max-distance: 450
            }
            hamza: {
                type: "poi"
                position: { x: 56, y: 66, z: 801 }
                label: "Hamza's base"
                icon: "assets/poi.svg"
                anchor: { x: 25, y: 45 }
                min-distance: 10
                max-distance: 450
            }
            rsp: {
                type: "poi"
                position: { x: 428, y: 80, z: 640 }
                label: "RSP's base"
                icon: "assets/poi.svg"
                anchor: { x: 25, y: 45 }
                min-distance: 10
                max-distance: 450
            }
            mj: {
                type: "poi"
                position: { x: -3177, y: 80, z: -2751 }
                label: "MikeJollie's house"
                icon: "assets/poi.svg"
                anchor: { x: 25, y: 45 }
                min-distance: 10
                max-distance: 450
            }
            caat: {
                type: "poi"
                position: { x: -844, y: 72, z: -437 }
                label: "Caat's house"
                icon: "assets/poi.svg"
                anchor: { x: 25, y: 45 }
                min-distance: 10
                max-distance: 450
            }
            caatold: {
                type: "poi"
                position: { x: -595, y: 72, z: -540 }
                label: "Caat's old house"
                icon: "assets/poi.svg"
                anchor: { x: 25, y: 45 }
                min-distance: 10
                max-distance: 200
            }
            omar: {
                type: "poi"
                position: { x: -800, y: 68, z: -531 }
                label: "Omar's house"
                icon: "assets/poi.svg"
                anchor: { x: 25, y: 45 }
                min-distance: 10
                max-distance: 450
            }
            azcaat: {
                type: "poi"
                position: { x: -1090, y: 135, z: 227 }
                label: "Caat and AZ's mountain house"
                icon: "assets/poi.svg"
                anchor: { x: 25, y: 45 }
                min-distance: 10
                max-distance: 450
            }
            pory: {
                type: "poi"
                position: { x: -147, y: 69, z: -507 }
                label: "Porygon's house"
                icon: "assets/poi.svg"
                anchor: { x: 25, y: 45 }
                min-distance: 10
                max-distance: 450
            }
            azisland: {
                type: "poi"
                position: { x: 967, y: 76, z: 51 }
                label: "AZ's island house"
                icon: "assets/poi.svg"
                anchor: { x: 25, y: 45 }
                min-distance: 10
                max-distance: 450
            }
            alex: {
                type: "poi"
                position: { x: -459, y: 84, z: 684 }
                label: "Alex's house"
                icon: "assets/poi.svg"
                anchor: { x: 25, y: 45 }
                min-distance: 10
                max-distance: 450
            }
            lime: {
                type: "poi"
                position: { x: -807, y: 76, z: -381 }
                label: "StudiosLime's house"
                icon: "assets/poi.svg"
                anchor: { x: 25, y: 45 }
                min-distance: 10
                max-distance: 450
            }
            jesse: {
                type: "poi"
                position: { x: -789, y: 75, z: -358 }
                label: "Jesse's house"
                icon: "assets/poi.svg"
                anchor: { x: 25, y: 45 }
                min-distance: 10
                max-distance: 450
            }
            ashhideout: {
                type: "poi"
                position: { x: -848, y: 119, z: -523 }
                label: "SleepingAsh's hideout"
                icon: "assets/poi.svg"
                anchor: { x: 25, y: 45 }
                min-distance: 10
                max-distance: 450
            }
            sjakr: {
                type: "poi"
                position: { x: -1001, y: 73, z: 177 }
                label: "Sjakr's house"
                icon: "assets/poi.svg"
                anchor: { x: 25, y: 45 }
                min-distance: 10
                max-distance: 450
            }
            phok: {
                type: "poi"
                position: { x: -993, y: 114, z: 372 }
                label: "Phok's house"
                icon: "assets/poi.svg"
                anchor: { x: 25, y: 45 }
                min-distance: 10
                max-distance: 450
            }




            
    #
    #        example-html-marker: {
    #            type: "html"
    #            position: { x: 1, y: 64, z: -23 }
    #            label: "Example HTML Marker"
    #            html: "<div style='line-height: 2em; font-size: 2em; color: white; transform: translate(-50%, -50%);'>Example HTML Marker</div>"
    #            anchor: { x: 0, y: 0 }
    #            min-distance: 10
    #            max-distance: 10000000
    #        }
    #
    #        example-line-marker: {
    #            type: "line"
    #            position: { x: 1, y: 64, z: -25 }
    #            line: [
    #                { x: 1, y: 64, z: -23 }
    #                { x: 1, y: 64, z: -24 }
    #                { x: 1, y: 64, z: -25 }
    #                { x: 2, y: 64, z: -25 }
    #                { x: 3, y: 64, z: -25 }
    #            ]
    #            label: "Example Line Marker"
    #            detail: "This is a <b>line</b> marker"
    #            link: null
    #            new-tab: false
    #            depth-test: true
    #            line-width: 5
    #            line-color: { r: 255, g: 0, b: 0, a: 1.0 }
    #            min-distance: 10
    #            max-distance: 10000000
    #        }
    #
            
    #
    #        example-extrude-marker: {
    #            type: "extrude"
    #            position: { x: 1, y: 64, z: -23 }
    #            shape: [
    #                { x: 1, z: -23 }
    #                { x: 1, z: -24 }
    #                { x: 1, z: -25 }
    #                { x: 2, z: -25 }
    #                { x: 3, z: -25 }
    #            ]
    #            shape-min-y: 47
    #            shape-max-y: 72
    #            label: "Example Extrude Marker"
    #            detail: "This is a <b>extrude</b> marker"
    #            link: null
    #            new-tab: false
    #            depth-test: true
    #            line-width: 5
    #            line-color: { r: 255, g: 0, b: 0, a: 1.0 }
    #            fill-color: { r: 200, g: 0, b: 0, a: 0.3 }
    #            min-distance: 10
    #            max-distance: 10000000
           }
    
        }
    
    }

#}
